# Server
# PORT is optional; defaults to 8080
PORT=8080

# Database (Postgres)
# Format: postgres://USER:PASSWORD@HOST:PORT/DBNAME
# For local development: postgres://postgres:postgres@localhost:5432/agentic_devops
DATABASE_URL=postgres://username:password@host:port/database

# Redis
# Format: redis://HOST:PORT
# For local development: redis://localhost:6379
REDIS_URL=redis://host:port

# GitHub API
# Create a fine-scoped token or use GITHUB_APP installation token
# See: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
GITHUB_TOKEN=your_github_token_here

# Slack webhook
# Incoming webhook URL for a channel
# See: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Google Cloud Project ID (enables Cloud Monitoring + Secret Manager adapters)
# Set this to your GCP project ID for production use
GCP_PROJECT_ID=your-gcp-project-id

# Cloud Monitoring MQL queries (JSON mapping threshold keys â†’ MQL)
# Placeholders: $SERVICE, $WINDOW_MIN
# These are example queries - customize for your metrics and services
GCM_MQL_QUERIES_JSON={"latency_p95_ms":"fetch time_series | metric 'custom.googleapis.com/http/latency_p95_ms' | filter (resource.service_name == '$SERVICE') | window $WINDOW_MINm | value val()","error_rate_pct":"fetch time_series | metric 'custom.googleapis.com/http/error_rate_pct' | filter (resource.service_name == '$SERVICE') | window $WINDOW_MINm | value val()","cpu_saturation_pct":"fetch time_series | metric 'agent.googleapis.com/cpu/utilization' | filter (resource.service_name == '$SERVICE') | window $WINDOW_MINm | value val()*100"}
